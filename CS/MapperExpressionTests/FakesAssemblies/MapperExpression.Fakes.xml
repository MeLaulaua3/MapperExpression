<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MapperExpression.Fakes</name>
    </assembly>
    <members>
        <member name="T:MapperExpression.Core.Fakes.ShimMapperConfiguration`2">
            <summary>Type shim de MapperExpression.Core.MapperConfiguration`2</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.#ctor(MapperExpression.Core.MapperConfiguration{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AfterMapActionOfT0T1">
            <summary>Définit le shim de MapperConfiguration`2.AfterMap(Action`2&lt;!0,!1&gt; actionAfterMap)</summary>
        </member>
        <member name="T:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.AfterMapActionOfT0T1">
            <summary>Définit le shim de MapperConfiguration`2.AfterMap(Action`2&lt;!0,!1&gt; actionAfterMap)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.ConstructUsingServiceLocator">
            <summary>Définit le shim de MapperConfiguration`2.ConstructUsingServiceLocator()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.ExecuteAfterActionsT0T1">
            <summary>Définit le shim de MapperConfiguration`2.ExecuteAfterActions(!0 source, !1 dest)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.ForMemberExpressionOfFuncOfT0ObjectExpressionOfFuncOfT1ObjectBoolean">
            <summary>Définit le shim de MapperConfiguration`2.ForMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; getPropertySource, Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; getPropertyDest, Boolean checkIfNull)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.GetFuncDelegate">
            <summary>Définit le shim de MapperConfiguration`2.GetFuncDelegate()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.GetLambdaExpression">
            <summary>Définit le shim de MapperConfiguration`2.GetLambdaExpression()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.GetSortedExpressionString">
            <summary>Définit le shim de MapperConfiguration`2.GetSortedExpression(String propertySource)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.IgnoreExpressionOfFuncOfT1Object">
            <summary>Définit le shim de MapperConfiguration`2.Ignore(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; propertyDest)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.AllInstances.ReverseMap">
            <summary>Définit le shim de MapperConfiguration`2.ReverseMap()</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.ConstructUsingServiceLocator">
            <summary>Définit le shim de MapperConfiguration`2.ConstructUsingServiceLocator()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.ConstructorStringString">
            <summary>Définit le shim de MapperConfiguration`2.MapperConfiguration`2(String paramName, String mapperName)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.ExecuteAfterActionsT0T1">
            <summary>Définit le shim de MapperConfiguration`2.ExecuteAfterActions(!0 source, !1 dest)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.ForMemberExpressionOfFuncOfT0ObjectExpressionOfFuncOfT1ObjectBoolean">
            <summary>Définit le shim de MapperConfiguration`2.ForMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; getPropertySource, Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; getPropertyDest, Boolean checkIfNull)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.GetFuncDelegate">
            <summary>Définit le shim de MapperConfiguration`2.GetFuncDelegate()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.GetLambdaExpression">
            <summary>Définit le shim de MapperConfiguration`2.GetLambdaExpression()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.GetSortedExpressionString">
            <summary>Définit le shim de MapperConfiguration`2.GetSortedExpression(String propertySource)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.IgnoreExpressionOfFuncOfT1Object">
            <summary>Définit le shim de MapperConfiguration`2.Ignore(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; propertyDest)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfiguration`2.ReverseMap">
            <summary>Définit le shim de MapperConfiguration`2.ReverseMap()</summary>
        </member>
        <member name="T:MapperExpression.Core.Fakes.ShimMapperConfigurationBase">
            <summary>Type shim de MapperExpression.Core.MapperConfigurationBase</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.#ctor(MapperExpression.Core.MapperConfigurationBase)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.CheckAndConfigureMappingTupleOfLambdaExpressionLambdaExpressionBoolean">
            <summary>Définit le shim de MapperConfigurationBase.CheckAndConfigureMapping(Tuple`3&lt;LambdaExpression,LambdaExpression,Boolean&gt; configExpression)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.CheckAndRemoveMemberDestString">
            <summary>Définit le shim de MapperConfigurationBase.CheckAndRemoveMemberDest(String properyName)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.CreateCommonMember">
            <summary>Définit le shim de MapperConfigurationBase.CreateCommonMember()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.CreateConfigTypeType">
            <summary>Définit le shim de MapperConfigurationBase.CreateConfig(Type typeSource, Type typeTarget)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.CreateExpressionsListOfTupleOfLambdaExpressionLambdaExpressionBooleanMapperExpressionVisitorMapperExpressionVisitor">
            <summary>Définit le shim de MapperConfigurationBase.CreateExpressions(List`1&lt;Tuple`3&lt;LambdaExpression,LambdaExpression,Boolean&gt;&gt; propertiesMapping, MapperExpressionVisitor expressionVisitorSource, MapperExpressionVisitor expressionVisitorTarget)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.CreateMappingExpressionFuncOfTypeObject">
            <summary>Définit le shim de MapperConfigurationBase.CreateMappingExpression(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.CreateMemberAssignementForExistingTarget">
            <summary>Définit le shim de MapperConfigurationBase.CreateMemberAssignementForExistingTarget()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.CreateMemberBindingExpressionPropertyInfoBoolean">
            <summary>Définit le shim de MapperConfigurationBase.CreateMemberBinding(Expression propertyExpression, PropertyInfo propertyTarget, Boolean checkIfNull)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.ForMemberLambdaExpressionLambdaExpressionBoolean">
            <summary>Définit le shim de MapperConfigurationBase.ForMember(LambdaExpression getPropertySource, LambdaExpression getPropertyDest, Boolean checkIfNull)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetDelegate">
            <summary>Définit le shim de MapperConfigurationBase.GetDelegate()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetDelegateForExistingTarget">
            <summary>Définit le shim de MapperConfigurationBase.GetDelegateForExistingTarget()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetDestinationType">
            <summary>Définit le shim de MapperConfigurationBase.GetDestinationType()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetGenericLambdaExpression">
            <summary>Définit le shim de MapperConfigurationBase.GetGenericLambdaExpression()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetLambdaDestString">
            <summary>Définit le shim de MapperConfigurationBase.GetLambdaDest(String propertyName)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetMapperTypeTypeBoolean">
            <summary>Définit le shim de MapperConfigurationBase.GetMapper(Type typeOfSource, Type typeOfTarget, Boolean throwExceptionOnNoFound)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetMemberInitExpression">
            <summary>Définit le shim de MapperConfigurationBase.GetMemberInitExpression()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetPropertyInfoLambdaExpression">
            <summary>Définit le shim de MapperConfigurationBase.GetPropertyInfo(LambdaExpression propertyExpression)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.GetRealTypeType">
            <summary>Définit le shim de MapperConfigurationBase.GetRealType(Type typeToFind)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.IsListOfType">
            <summary>Définit le shim de MapperConfigurationBase.IsListOf(Type typeTarget)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.MemberToMapForNewGet">
            <summary>Définit le shim de MapperConfigurationBase.get_MemberToMapForNew()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.MemberToMapForNewSetListOfMemberAssignment">
            <summary>Définit le shim de MapperConfigurationBase.set_MemberToMapForNew(List`1&lt;MemberAssignment&gt; value)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.NameGet">
            <summary>Définit le shim de MapperConfigurationBase.get_Name()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.NameSetString">
            <summary>Définit le shim de MapperConfigurationBase.set_Name(String value)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.SourceTypeGet">
            <summary>Définit le shim de MapperConfigurationBase.get_SourceType()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.SourceTypeSetType">
            <summary>Définit le shim de MapperConfigurationBase.set_SourceType(Type value)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.TargetTypeGet">
            <summary>Définit le shim de MapperConfigurationBase.get_TargetType()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.TargetTypeSetType">
            <summary>Définit le shim de MapperConfigurationBase.set_TargetType(Type value)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.UseServiceLocatorGet">
            <summary>Définit le shim de MapperConfigurationBase.get_UseServiceLocator()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.AllInstances.UseServiceLocatorSetBoolean">
            <summary>Définit le shim de MapperConfigurationBase.set_UseServiceLocator(Boolean value)</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.CheckAndConfigureMappingTupleOfLambdaExpressionLambdaExpressionBoolean">
            <summary>Définit le shim de MapperConfigurationBase.CheckAndConfigureMapping(Tuple`3&lt;LambdaExpression,LambdaExpression,Boolean&gt; configExpression)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.CheckAndRemoveMemberDestString">
            <summary>Définit le shim de MapperConfigurationBase.CheckAndRemoveMemberDest(String properyName)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.ConstructorTypeTypeStringString">
            <summary>Définit le shim de MapperConfigurationBase.MapperConfigurationBase(Type source, Type destination, String paramName, String name)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.CreateCommonMember">
            <summary>Définit le shim de MapperConfigurationBase.CreateCommonMember()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.CreateConfigTypeType">
            <summary>Définit le shim de MapperConfigurationBase.CreateConfig(Type typeSource, Type typeTarget)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.CreateExpressionsListOfTupleOfLambdaExpressionLambdaExpressionBooleanMapperExpressionVisitorMapperExpressionVisitor">
            <summary>Définit le shim de MapperConfigurationBase.CreateExpressions(List`1&lt;Tuple`3&lt;LambdaExpression,LambdaExpression,Boolean&gt;&gt; propertiesMapping, MapperExpressionVisitor expressionVisitorSource, MapperExpressionVisitor expressionVisitorTarget)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.CreateMappingExpressionFuncOfTypeObject">
            <summary>Définit le shim de MapperConfigurationBase.CreateMappingExpression(Func`2&lt;Type,Object&gt; constructor)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.CreateMemberAssignementForExistingTarget">
            <summary>Définit le shim de MapperConfigurationBase.CreateMemberAssignementForExistingTarget()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.CreateMemberBindingExpressionPropertyInfoBoolean">
            <summary>Définit le shim de MapperConfigurationBase.CreateMemberBinding(Expression propertyExpression, PropertyInfo propertyTarget, Boolean checkIfNull)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.ForMemberLambdaExpressionLambdaExpressionBoolean">
            <summary>Définit le shim de MapperConfigurationBase.ForMember(LambdaExpression getPropertySource, LambdaExpression getPropertyDest, Boolean checkIfNull)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetDelegate">
            <summary>Définit le shim de MapperConfigurationBase.GetDelegate()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetDelegateForExistingTarget">
            <summary>Définit le shim de MapperConfigurationBase.GetDelegateForExistingTarget()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetDestinationType">
            <summary>Définit le shim de MapperConfigurationBase.GetDestinationType()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetGenericLambdaExpression">
            <summary>Définit le shim de MapperConfigurationBase.GetGenericLambdaExpression()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetLambdaDestString">
            <summary>Définit le shim de MapperConfigurationBase.GetLambdaDest(String propertyName)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetMapperTypeTypeBoolean">
            <summary>Définit le shim de MapperConfigurationBase.GetMapper(Type typeOfSource, Type typeOfTarget, Boolean throwExceptionOnNoFound)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetMemberInitExpression">
            <summary>Définit le shim de MapperConfigurationBase.GetMemberInitExpression()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetPropertyInfoLambdaExpression">
            <summary>Définit le shim de MapperConfigurationBase.GetPropertyInfo(LambdaExpression propertyExpression)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.GetRealTypeType">
            <summary>Définit le shim de MapperConfigurationBase.GetRealType(Type typeToFind)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.IsListOfType">
            <summary>Définit le shim de MapperConfigurationBase.IsListOf(Type typeTarget)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.MemberToMapForNewGet">
            <summary>Définit le shim de MapperConfigurationBase.get_MemberToMapForNew()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.MemberToMapForNewSetListOfMemberAssignment">
            <summary>Définit le shim de MapperConfigurationBase.set_MemberToMapForNew(List`1&lt;MemberAssignment&gt; value)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.NameGet">
            <summary>Définit le shim de MapperConfigurationBase.get_Name()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.NameSetString">
            <summary>Définit le shim de MapperConfigurationBase.set_Name(String value)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.SourceTypeGet">
            <summary>Définit le shim de MapperConfigurationBase.get_SourceType()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.SourceTypeSetType">
            <summary>Définit le shim de MapperConfigurationBase.set_SourceType(Type value)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.TargetTypeGet">
            <summary>Définit le shim de MapperConfigurationBase.get_TargetType()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.TargetTypeSetType">
            <summary>Définit le shim de MapperConfigurationBase.set_TargetType(Type value)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.UseServiceLocatorGet">
            <summary>Définit le shim de MapperConfigurationBase.get_UseServiceLocator()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationBase.UseServiceLocatorSetBoolean">
            <summary>Définit le shim de MapperConfigurationBase.set_UseServiceLocator(Boolean value)</summary>
        </member>
        <member name="T:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer">
            <summary>Type shim de MapperExpression.Core.MapperConfigurationContainer</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.#ctor(MapperExpression.Core.MapperConfigurationContainer)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AddMapperConfigurationBase">
            <summary>Définit le shim de MapperConfigurationContainer.Add(MapperConfigurationBase item)</summary>
        </member>
        <member name="T:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.AddMapperConfigurationBase">
            <summary>Définit le shim de MapperConfigurationContainer.Add(MapperConfigurationBase item)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.Clear">
            <summary>Définit le shim de MapperConfigurationContainer.Clear()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.CountGet">
            <summary>Définit le shim de MapperConfigurationContainer.get_Count()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.Dispose">
            <summary>Définit le shim de MapperConfigurationContainer.Dispose()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.ExistsPredicateOfMapperConfigurationBase">
            <summary>Définit le shim de MapperConfigurationContainer.Exists(Predicate`1&lt;MapperConfigurationBase&gt; match)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.FindTypeTypeString">
            <summary>Définit le shim de MapperConfigurationContainer.Find(Type source, Type target, String name)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.GetEnumerator">
            <summary>Définit le shim de MapperConfigurationContainer.GetEnumerator()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.RemoveAtInt32">
            <summary>Définit le shim de MapperConfigurationContainer.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de MapperConfigurationContainer.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.Bind(System.IDisposable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.Bind(System.Collections.Generic.IEnumerable{MapperExpression.Core.MapperConfigurationBase})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.Clear">
            <summary>Définit le shim de MapperConfigurationContainer.Clear()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.Constructor">
            <summary>Définit le shim de MapperConfigurationContainer.MapperConfigurationContainer()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.CountGet">
            <summary>Définit le shim de MapperConfigurationContainer.get_Count()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.Dispose">
            <summary>Définit le shim de MapperConfigurationContainer.Dispose()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.ExistsPredicateOfMapperConfigurationBase">
            <summary>Définit le shim de MapperConfigurationContainer.Exists(Predicate`1&lt;MapperConfigurationBase&gt; match)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.FindTypeTypeString">
            <summary>Définit le shim de MapperConfigurationContainer.Find(Type source, Type target, String name)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.GetEnumerator">
            <summary>Définit le shim de MapperConfigurationContainer.GetEnumerator()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.InstanceGet">
            <summary>Définit le shim de MapperConfigurationContainer.get_Instance()</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.RemoveAtInt32">
            <summary>Définit le shim de MapperConfigurationContainer.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:MapperExpression.Core.Fakes.ShimMapperConfigurationContainer.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de MapperConfigurationContainer.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
    </members>
</doc>
